plot
plot(x,y)
present <-read.table("http://assets.datacamp.com/course/dasi/present.txt")
present
dim(present)
names(present)
num_boys <- present$boys
num_girls <- present$girls
num_boys
num_girls
plot(present$year, present$girls)
plot(x = present$year, y = present$girls, type = "1")
endomech <- read.csv("endomech.csv", header = TRUE)
head(endomech)
endomech <- read.csv("endomech.csv", header = TRUE)
head(endomech)
head(names(endomech))
str(endomech)
endomech <- read.csv("endomech.csv", header = TRUE)
head(endomech)
head(names(endomech))
str(endomech)
column <- "Circular.Stapler.Circular.Stapler.Stryker.Sustainability.Circular.Stapler.excl.PPH"
setwd("~/Documents/J&J Week 1/jnjweek1")
endomech <- read.csv("endomech.csv", header = TRUE)
head(endomech)
head(names(endomech))
str(endomech)
column <- "Circular.Stapler.Circular.Stapler.Stryker.Sustainability.Circular.Stapler.excl.PPH"
selected_df <- data.frame(endomech$Date, endomech[column])
non_na_selected <- subset(selected_df, !is.na(selected_df[column]))
mean(non_na_selected[2:nrow(non_na_selected),2])
selected_df[is.na(selected_df)] <- mean(non_na_selected[2:nrow(non_na_selected),2])
plot(selected_df)
load(ggplot2)
install.packages("ggplot2")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
install.packages("plotly")
endomech <- read.csv("endomech.csv", header = TRUE)
install.packages("ggplot2")
install.packages("plotly")
head(endomech)
head(names(endomech))
str(endomech)
column <- "Circular.Stapler.Circular.Stapler.Stryker.Sustainability.Circular.Stapler.excl.PPH"
col <- endomech$Circular.Stapler.Circular.Stapler.Stryker.Sustainability.Circular.Stapler.excl.PPH
selected_df <- data.frame(endomech$Date, endomech[column])
non_na_selected <- subset(selected_df, !is.na(selected_df[column]))
non_na_selected
mean(non_na_selected[1:nrow(non_na_selected),2])
selected_df[is.na(selected_df)] <- mean(non_na_selected[1:nrow(non_na_selected),2])
selected_df$endomech.Date <- as.Date(selected_df$endomech.Date
, format = "%m/%d/%Y")
plot(selected_df)
m1 <- lm(selected_df[,2] ~ selected_df$endomech.Date)
summary(m1)
endomech <- read.csv("endomech.csv", header = TRUE)
install.packages("ggplot2")
install.packages("plotly")
head(endomech)
head(names(endomech))
str(endomech)
column <- "Circular.Stapler.Circular.Stapler.Stryker.Sustainability.Circular.Stapler.excl.PPH"
col <- endomech$Circular.Stapler.Circular.Stapler.Stryker.Sustainability.Circular.Stapler.excl.PPH
selected_df <- data.frame(endomech$Date, endomech[column])
non_na_selected <- subset(selected_df, !is.na(selected_df[column]))
non_na_selected
mean(non_na_selected[1:nrow(non_na_selected),2])
selected_df[is.na(selected_df)] <- mean(non_na_selected[1:nrow(non_na_selected),2])
selected_df <- selected_df[1:74,]
selected_df$endomech.Date <- as.Date(selected_df$endomech.Date
, format = "%m/%d/%Y")
plot(selected_df, type = "l")
linear <- lm(selected_df[,2] ~ selected_df$endomech.Date)
summary(linear)
install.packages('forecast')
library('forecast')
arima_auto_test <- auto.arima(selected_df[,2], max.P = 10, max.Q = 10)
summary(arima_auto_test)
arima <- arima(selected_df$Circular.Stapler.Circular.Stapler.Stryker.Sustainability.Circular.Stapler.excl.PPH, order = c(1, 0, 5))
arima_forecast <- forecast.Arima(arima, h = 12)
plot.forecast(arima_forecast)
summary(arima)
install.packages("TTR")
install.packages("TTR")
install.packages("TTR")
endomech <- read.csv("endomech.csv", header = TRUE)
install.packages("ggplot2")
install.packages("plotly")
head(endomech)
head(names(endomech))
str(endomech)
input <- readline('Enter column name: ')
input
column <- readline('Enter column name: ')
beta=FALSE, gamma=FALSE)
column <- readline('Enter column name: ')
stripped <- strip(column, char.keep = "~~", digit.remove = TRUE, apostrophe.remove = TRUE, lower.case = TRUE)
column <- readline('Enter column name: ')
stripped <- strip(column, char.keep = ".", apostrophe.remove = TRUE)
stripped <- strip.character(column, char.keep = ".", apostrophe.remove = TRUE)
?ifelse
?type
?plot
endomech <- read.csv("endomech.csv", header = TRUE)
install.packages("ggplot2")
install.packages("plotly")
head(endomech)
head(names(endomech))
str(endomech)
column <- readline('Enter column name: ')
non_na_selected <- subset(selected_df, !is.na(selected_df[column]))
non_na_selected
mean(non_na_selected[1:nrow(non_na_selected),2])
selected_df[is.na(selected_df)] <- mean(non_na_selected[1:nrow(non_na_selected),2])
selected_df <- selected_df[1:74,]
selected_df$endomech.Date <- as.Date(selected_df$endomech.Date
, format = "%m/%d/%Y")
plot(selected_df, type = "l")
linear <- lm(selected_df[,2] ~ selected_df$endomech.Date)
summary(linear)
install.packages('forecast')
library('forecast')
arima_auto <- auto.arima(selected_df[,2], max.P = 10, max.Q = 10)
arima_forecast <- forecast.Arima(arima_auto, h = 12)
plot.forecast(arima_forecast)
summary(arima)
install.packages("TTR")
install.packages("TTR")
library("TTR")
exp_smoothing <- HoltWinters(selected_df[,2], beta=FALSE, gamma=FALSE)
forecast_hw <- forecast.HoltWinters(exp_smoothing, h = 12)
plot.forecast(forecast_hw)
SSE_arima <- sum((arima$residuals)^2)
SSE_linear <- sum((linear$residuals)^2)
SSE_exp_smoothing <- exp_smoothing$SSE
SSE_exp_smoothing <- exp_smoothing$SSE
source('~/Documents/J&J Week 1/jnjweek1/endomech_practice.R', echo=TRUE)
source('~/Documents/J&J Week 1/jnjweek1/endomech_practice.R', echo=TRUE)
source('~/Documents/J&J Week 1/jnjweek1/endomech_practice.R', echo=TRUE)
source('~/Documents/J&J Week 1/jnjweek1/endomech_practice.R', echo=TRUE)
source('~/Documents/J&J Week 1/jnjweek1/endomech_practice.R', echo=TRUE)
source('~/Documents/J&J Week 1/jnjweek1/endomech_practice.R', echo=TRUE)
source('~/Documents/J&J Week 1/jnjweek1/endomech_practice.R', echo=TRUE)
source('~/Documents/J&J Week 1/jnjweek1/endomech_practice.R', echo=TRUE)
install.packages("plotly")
head(endomech)
head(names(endomech))
str(endomech)
column <- readline('Enter column name: ')
column <- readline('Enter column name: ')
Circular.Stapler.Circular.Stapler.Stryker.Sustainability.Circular.Stapler.excl.PPH
column <- readline('Enter column name: ')
head(names(endomech))
str(endomech)
endomech <- read.csv("endomech.csv", header = TRUE)
endomech <- read.csv("endomech.csv", header = TRUE)
install.packages("ggplot2")
install.packages("plotly")
head(endomech)
head(names(endomech))
str(endomech)
column <- readline('Enter column name: ')
column <- readline('Enter column name: ')
Circular.Stapler.Circular.Stapler.Stryker.Sustainability.Circular.Stapler.excl.PPH
d
d
d
head(names(endomech))
str(endomech)
column <- readline('Enter column name: ')
selected_df <- data.frame(endomech$Date, endomech[column])
non_na_selected <- subset(selected_df, !is.na(selected_df[column]))
non_na_selected
mean(non_na_selected[1:nrow(non_na_selected),2])
selected_df[is.na(selected_df)] <- mean(non_na_selected[1:nrow(non_na_selected),2])
selected_df <- selected_df[1:74,]
selected_df$endomech.Date <- as.Date(selected_df$endomech.Date
, format = "%m/%d/%Y")
plot(selected_df, type = "l")
linear <- lm(selected_df[,2] ~ selected_df$endomech.Date)
summary(linear)
install.packages('forecast')
library('forecast')
arima_auto <- auto.arima(selected_df[,2], max.P = 10, max.Q = 10)
arima_forecast <- forecast.Arima(arima_auto, h = 12)
plot.forecast(arima_forecast)
summary(arima)
forecast_hw <- forecast.HoltWinters(exp_smoothing, h = 12)
plot.forecast(forecast_hw)
install.packages('forecast')
install.packages("forecast")
library('forecast')
arima_auto <- auto.arima(selected_df[,2], max.P = 10, max.Q = 10)
arima_forecast <- forecast.Arima(arima_auto, h = 12)
plot.forecast(arima_forecast)
summary(arima)
summary(arima)
summary(arima_auto)
install.packages("TTR")
install.packages("TTR")
library("TTR")
exp_smoothing <- HoltWinters(selected_df[,2], beta=FALSE, gamma=FALSE)
forecast_hw <- forecast.HoltWinters(exp_smoothing, h = 12)
library("TTR")
exp_smoothing <- HoltWinters(selected_df[,2], beta=FALSE, gamma=FALSE)
forecast_hw <- forecast.HoltWinters(exp_smoothing, h = 12)
install.packages("TTR")
install.packages("TTR")
library("TTR")
exp_smoothing <- HoltWinters(selected_df[,2], beta=FALSE, gamma=FALSE)
forecast_hw <- forecast.HoltWinters(exp_smoothing, h = 12)
install.packages('forecast')
library('forecast')
arima_auto <- auto.arima(selected_df[,2], max.P = 10, max.Q = 10)
arima_forecast <- forecast.Arima(arima_auto, h = 12)
plot.forecast(arima_forecast)
summary(arima_auto)
install.packages("TTR")
install.packages("TTR")
library("TTR")
exp_smoothing <- HoltWinters(selected_df[,2], beta=FALSE, gamma=FALSE)
forecast_hw <- forecast.HoltWinters(exp_smoothing, h = 12)
plot.forecast(forecast_hw)
SSE_arima <- sum((arima$residuals)^2)
SSE_arima <- sum((arima$residuals)^2)
plot.forecast(forecast_hw)
SSE_arima <- sum((arima$residuals)^2)
SSE_arima <- sum((arima_auto$residuals)^2)
SSE_linear <- sum((linear$residuals)^2)
SSE_exp_smoothing <- exp_smoothing$SSE
SSE_arima
SSE_linear
SSE_exp_smoothing
test_data <- data.frame(Date = seq(as.Date("2016/3/1"), as.Date("2017/2/1"), "months"))
test_data$predict <- NA
test_data$predict <- predict(arima, newdata = test_data$Date)
test_data$predict <- predict(arima_auto, newdata = test_data$Date)
test_data
names(selected_df) <- c("Date", column)
plot(selected_df$Date, selected_df[,2],type="l")
?append
lines(test_data$Date, test_data$predict,col="green")
names(test_data) <- c("Date", column)
old_and_predicted <- rbind(selected_df, test_data)
plot(old_and_predicted$Date, old_and_predicted[,2],xlab="Date",ylab="Variable of Choice",
col = ifelse((old_and_predicted$Date < as.Date("2016/3/1")),'black','red'), type = 'b')
old_and_predicted$old <- NA
old_and_predicted$old[1:74,] <- old_and_predicted[1:74,2]
old_and_predicted$old[1:74,] <- old_and_predicted[1:74,2]
plot(test_data, type = "l")
library(ggplot2)
ggplot(selected_df) +
geom_line(data = selected_df, aes(Date, selected_df[,2]))
geom_line(data = test_data, aes(Date, test_data[,2]), colour = 'red', size = 3)
ggplot(old_and_predicted) +
geom_line(data = old_and_predicted, aes(Date, old_and_predicted[,2]))
